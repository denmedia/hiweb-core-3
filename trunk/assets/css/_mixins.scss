@import "functions";

@mixin border_radius($topleft: 5px, $topright: $topleft, $bottomright: $topleft, $bottomleft: $topleft) {
	-webkit-border-top-left-radius: $topleft;
	-webkit-border-top-right-radius: $topright;
	-webkit-border-bottom-right-radius: $bottomright;
	-webkit-border-bottom-left-radius: $bottomleft;
	-moz-border-radius-topleft: $topleft;
	-moz-border-radius-topright: $topright;
	-moz-border-radius-bottomright: $bottomright;
	-moz-border-radius-bottomleft: $bottomleft;
	border-top-left-radius: $topleft;
	border-top-right-radius: $topright;
	border-bottom-right-radius: $bottomright;
	border-bottom-left-radius: $bottomleft;
}

@mixin background_image($size: cover) {
	background: no-repeat center center;
	background-size: $size;
}

@mixin transition($key: all, $duration: .2s, $easing: ease-in-out, $delay: 0ms) {
	$params: null;
	@each $val in $key {
		@if ($params == '') {
			$params: $val $duration $easing $delay;
		} @else {
			$params: $params, $val $duration $easing $delay;
		}

	}
	-webkit-transition: $params;
	-moz-transition: $params;
	-o-transition: $params;
	transition: $params;
}

@mixin transform($transform: none) {
	-webkit-transform: $transform;
	-moz-transform: $transform;
	-o-transform: $transform;
	transform: $transform;
}

@mixin filter($filter: blur(5px)) {
	-webkit-filter: $filter;
	-moz-filter: $filter;
	-o-filter: $filter;
	-ms-filter: $filter;
	filter: $filter;
}

@mixin position_stretch($top: 0, $right: 0, $bottom: 0, $left: 0) {
	position: absolute;
	top: $top;
	right: $right;
	bottom: $bottom;
	left: $left;
}

@mixin position_stretch_2($padding: 0) {
	position: absolute;
	top: $padding;
	right: $padding;
	bottom: $padding;
	left: $padding;
}

@mixin opacity($opacity) {
	-webkit-opacity: $opacity;
	-moz-opacity: $opacity;
	-ms-opacity: $opacity;
	-o-opacity: $opacity;
	opacity: $opacity;
	$opacity-ie: $opacity * 100;
	filter: alpha(opacity=$opacity-ie); //IE8
}

@mixin box_shadow($size: 5px, $opacity: .04, $offset_x: 0px, $offset_y: 0px, $inset: false) {
	$props: $offset_x $offset_y $size 0 rgba(0, 0, 0, $opacity);
	@if $inset {
		$props: inset $offset_x $offset_y $size 0 rgba(0, 0, 0, $opacity);
	}

	-webkit-box-shadow: $props;
	-moz-box-shadow: $props;
	-o-box-shadow: $props;
	box-shadow: $props;
}

@mixin text_shadow($size: 5px, $x: 0, $y: 0, $color: rgba(0, 0, 0, 0.35)) {
	$props: $x $y $size $color;
	-webkit-text-shadow: $props;
	-moz-text-shadow: $props;
	-o-text-shadow: $props;
	text-shadow: $props;
}

@-webkit-keyframes rotating /* Safari and Chrome */
{
	from {
		-webkit-transform: rotate(0deg);
		-o-transform: rotate(0deg);
		transform: rotate(0deg);
	}
	to {
		-webkit-transform: rotate(360deg);
		-o-transform: rotate(360deg);
		transform: rotate(360deg);
	}
}

@keyframes rotating {
	from {
		-ms-transform: rotate(0deg);
		-moz-transform: rotate(0deg);
		-webkit-transform: rotate(0deg);
		-o-transform: rotate(0deg);
		transform: rotate(0deg);
	}
	to {
		-ms-transform: rotate(360deg);
		-moz-transform: rotate(360deg);
		-webkit-transform: rotate(360deg);
		-o-transform: rotate(360deg);
		transform: rotate(360deg);
	}
}

@mixin rotate($time: 2s, $easing: linear ) {
	-webkit-animation: rotating $time $easing infinite;
	-moz-animation: rotating $time $easing infinite;
	-ms-animation: rotating $time $easing infinite;
	-o-animation: rotating $time $easing infinite;
	animation: rotating $time $easing infinite;
}


@mixin clearfix() {
	&:before,
	&:after {
		content: "";
		display: table;
	}
	&:after {
		clear: both;
	}
}

@mixin box-sizing($box-model) {
	-webkit-box-sizing: $box-model; // Safari <= 5
	-moz-box-sizing: $box-model; // Firefox <= 19
	box-sizing: $box-model;
}